#!/usr/bin/env php
<?php

// .env
$dotEnvPath = dirname(__DIR__) . '/../../.env';

// Used when executed in vendor/bin
$vendorPath = dirname(__DIR__) . '/../autoload.php';

// standalone package
$localPath = dirname(__DIR__) . '/vendor/autoload.php';

if (file_exists($vendorPath)) {
    include_once $vendorPath;
} else {
    include_once $localPath;
}
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\SingleCommandApplication;

(new SingleCommandApplication())
    ->setName('fortrabbit Object Storage setup') // Optional
    ->addArgument('app', InputArgument::REQUIRED, 'Name of fortrabbit App')
    ->setCode(function (InputInterface $input, OutputInterface $output) use($dotEnvPath) {

        if (!$config = getConfig($input->getArgument('app'))) {
            $output->writeln(PHP_EOL . '<fg=red>Unable to read config.</>' . PHP_EOL);
            $output->writeln('Please try to setup .env by using this guide:');
            $output->writeln('https://github.com/fortrabbit/craft-object-storage#installation'. PHP_EOL);
            return 1;
        }

        $env = ["# GENERATED BY fortrabbit/craft-object-storage ###"];
        foreach ($config as $key => $value) {
            $env[] = $key . '="' . $value . '"';
        }
        $asString = PHP_EOL . implode(PHP_EOL, $env);

        if (file_put_contents($dotEnvPath, PHP_EOL . $asString . PHP_EOL, FILE_APPEND) === false) {
            $output->writeln('<fg=red>Failed to write config. Please add this block to your .env file:</>');
        } else {
            $output->writeln('<fg=green>New lines added to .env file:</>');
        }

        $output->writeln($asString);

        return 0;

    })
    ->run();


function getConfig(string $app): ?array
    {
        if ($records = dns_get_record("$app.frb.io", DNS_CNAME)) {
            $region = explode('.', $records[0]['target'])[1];
        }

        if (!isset($region) || ! $json = shell_exec("ssh {$app}@deploy.{$region}.frbit.com secrets OBJECT_STORAGE 2>&1")) {
            return null;
        }

        $config = json_decode($json, true);

        // prefix keys
        $config = array_combine(
            array_map(function($k){ return 'OBJECT_STORAGE_' . $k; }, array_keys($config)),
            $config
        );

        return $config;
    }
